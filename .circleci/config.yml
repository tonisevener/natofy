# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

version: 2.1

jobs:

  deploy_beta:
    macos:
      xcode: 12.3.0
    steps:
      - run:
          name: decode DistributionCertificate
          command: base64 -D -o DistributionCertificate.p12 <<< $DistributionCertificate
      - run:
          name: make Provisioning Profiles directory
          command: mkdir -pv ~/Library/MobileDevice/Provisioning\ Profiles/
      - run:
          name: decode AppProfile
          command: base64 -D -o ~/Library/MobileDevice/Provisioning\ Profiles/AppProfile.mobileprovision <<< $AppProfile
      - run:
          name: decode ActionExtensionProfile
          command: base64 -D -o ~/Library/MobileDevice/Provisioning\ Profiles/ActionExtensionProfile.mobileprovision <<< $ActionExtensionProfile
      - run:
          name: decode WatchExtensionProfile
          command: base64 -D -o ~/Library/MobileDevice/Provisioning\ Profiles/WatchExtensionProfile.mobileprovision <<< $WatchExtensionProfile
      - run:
          name: decode WatchProfile
          command: base64 -D -o ~/Library/MobileDevice/Provisioning\ Profiles/WatchProfile.mobileprovision <<< $WatchProfile
      
  unit_tests:

    macos:
      xcode: 12.3.0

    steps:
      - checkout
      - run:
          name: Run tests
          command: fastlane scan
          environment:
            SCAN_DEVICE: iPhone 12 mini
            SCAN_SCHEME: Natofy
      - store_test_results:
          path: fastlane/test_output/
            
  screenshots:

    macos:
      xcode: 12.3.0

    steps:
      - checkout
      - run:
          name: Install xcparse
          command: brew install chargepoint/xcparse/xcparse
      - run:
          name: Run screenshots script
          command: fastlane ios screenshots
          environment:
            SCAN_DEVICE: iPhone 12 mini
            SCAN_SCHEME: Natofy
      - run:
          name: Compress Artifacts
          command: cd /tmp ; tar -cvzf screenshots.tar screenshots
      - store_test_results:
          path: fastlane/test_output/
      - store_artifacts:
          path: /tmp/screenshots.tar
          destination: screenshots

workflows:
    deploy_beta:
    jobs:
      - deploy_beta
  unit_tests:
    jobs:
      - unit_tests
  screenshots:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - screenshots-ci
    jobs:
      - screenshots
